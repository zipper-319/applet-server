syntax = "proto3";

package applet.v2;
option go_package = "applet-server/api/v2/applet";


import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "options/gorm.proto";
import "google/protobuf/empty.proto";


service TTSService {
    rpc GetTTSConfig(google.protobuf.Empty) returns (GetTTSConfigResult) {
        option (google.api.http) = {
            get: "/api/v2/tts/getTTSConfig"
        };
    }
}

message GetTTSConfigResult {
    repeated SpeakerParameter speaker_list = 1 [json_name = "speaker_list"];                           // 发音人列表
    repeated string speed_list = 2 [json_name = "speed_list"];                         // SupportedSpeed
    repeated string volume_list = 3 [json_name = "volume_list"];                        // SupportedVolume
    repeated MessagePitch pitch_list = 4 [json_name = "pitch_list"];                   // SupportedPitch
    repeated MessageEmotion emotion_list = 5 [json_name = "emotion_list"];               // SupportedEmotion
    repeated MessageMovement  movement_list  = 7 [json_name = "movement_list"];            // SupportedMovement  动作
    repeated MessageExpression  expression_list  = 8 [json_name = "expression_list"];        // SupportedExpression 表情
}

message SpeakerParameter {
    string speaker_name = 2 [json_name = "speaker_name"];                                // 发音人名字
    string parameter_speaker_name = 3 [json_name = "parameter_speaker_name"];                      // 发音人英文名字
    bool is_support_emotion = 4 [json_name = "is_support_emotion"];                            // 是否支持情感
    bool is_support_mixed_voice = 5 [json_name = "is_support_mixed_voice"];                        // 是否支持混合发音
    bool  is_belong_clone = 6 [json_name = "is_belong_clone"];                              // 是否属于克隆的发音人
}

message MessagePitch {

    string name = 2;                                        // 参数
    string chinese_name = 3 [json_name = "chinese_name"];                               // 对应中文
}

message MessageEmotion {

    string name = 2;                                        // 参数
    string chinese_name = 3[json_name = "chinese_name"];                                // 对应中文
}

message MessageDigitalPerson {

    string name = 2;                                        // 参数
    string chinese_name = 3 [json_name = "chinese_name"];                                // 对应中文
}

message MessageMovement{
    string name = 1;                                    // 用于传参
    string chinese_name = 2[json_name = "chinese_name"];                            // 对应中文
}

message MessageExpression{
    string name = 1;                                    // 用于传参
    string chinese_name = 2 [json_name = "chinese_name"];                            // 对应中文
}