// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: v2/applet/tts.proto

package applet

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/infobloxopen/protoc-gen-gorm/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetTTSConfigResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpeakerList    []*SpeakerParameter  `protobuf:"bytes,1,rep,name=speaker_list,json=speakerList,proto3" json:"speaker_list"`          // 发音人列表
	SpeedList      []string             `protobuf:"bytes,2,rep,name=speed_list,json=speedList,proto3" json:"speed_list"`                // SupportedSpeed
	VolumeList     []string             `protobuf:"bytes,3,rep,name=volume_list,json=volumeList,proto3" json:"volume_list"`             // SupportedVolume
	PitchList      []*MessagePitch      `protobuf:"bytes,4,rep,name=pitch_list,json=pitchList,proto3" json:"pitch_list"`                // SupportedPitch
	EmotionList    []*MessageEmotion    `protobuf:"bytes,5,rep,name=emotion_list,json=emotionList,proto3" json:"emotion_list"`          // SupportedEmotion
	MovementList   []*MessageMovement   `protobuf:"bytes,7,rep,name=movement_list,json=movementList,proto3" json:"movement_list"`       // SupportedMovement  动作
	ExpressionList []*MessageExpression `protobuf:"bytes,8,rep,name=expression_list,json=expressionList,proto3" json:"expression_list"` // SupportedExpression 表情
}

func (x *GetTTSConfigResult) Reset() {
	*x = GetTTSConfigResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_tts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTTSConfigResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTTSConfigResult) ProtoMessage() {}

func (x *GetTTSConfigResult) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_tts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTTSConfigResult.ProtoReflect.Descriptor instead.
func (*GetTTSConfigResult) Descriptor() ([]byte, []int) {
	return file_v2_applet_tts_proto_rawDescGZIP(), []int{0}
}

func (x *GetTTSConfigResult) GetSpeakerList() []*SpeakerParameter {
	if x != nil {
		return x.SpeakerList
	}
	return nil
}

func (x *GetTTSConfigResult) GetSpeedList() []string {
	if x != nil {
		return x.SpeedList
	}
	return nil
}

func (x *GetTTSConfigResult) GetVolumeList() []string {
	if x != nil {
		return x.VolumeList
	}
	return nil
}

func (x *GetTTSConfigResult) GetPitchList() []*MessagePitch {
	if x != nil {
		return x.PitchList
	}
	return nil
}

func (x *GetTTSConfigResult) GetEmotionList() []*MessageEmotion {
	if x != nil {
		return x.EmotionList
	}
	return nil
}

func (x *GetTTSConfigResult) GetMovementList() []*MessageMovement {
	if x != nil {
		return x.MovementList
	}
	return nil
}

func (x *GetTTSConfigResult) GetExpressionList() []*MessageExpression {
	if x != nil {
		return x.ExpressionList
	}
	return nil
}

type SpeakerParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpeakerName          string `protobuf:"bytes,2,opt,name=speaker_name,json=speakerName,proto3" json:"speaker_name"`                              // 发音人名字
	ParameterSpeakerName string `protobuf:"bytes,3,opt,name=parameter_speaker_name,json=parameterSpeakerName,proto3" json:"parameter_speaker_name"` // 发音人英文名字
	IsSupportEmotion     bool   `protobuf:"varint,4,opt,name=is_support_emotion,json=isSupportEmotion,proto3" json:"is_support_emotion"`            // 是否支持情感
	IsSupportMixedVoice  bool   `protobuf:"varint,5,opt,name=is_support_mixed_voice,json=isSupportMixedVoice,proto3" json:"is_support_mixed_voice"` // 是否支持混合发音
	IsBelongClone        bool   `protobuf:"varint,6,opt,name=is_belong_clone,json=isBelongClone,proto3" json:"is_belong_clone"`                     // 是否属于克隆的发音人
}

func (x *SpeakerParameter) Reset() {
	*x = SpeakerParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_tts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeakerParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakerParameter) ProtoMessage() {}

func (x *SpeakerParameter) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_tts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakerParameter.ProtoReflect.Descriptor instead.
func (*SpeakerParameter) Descriptor() ([]byte, []int) {
	return file_v2_applet_tts_proto_rawDescGZIP(), []int{1}
}

func (x *SpeakerParameter) GetSpeakerName() string {
	if x != nil {
		return x.SpeakerName
	}
	return ""
}

func (x *SpeakerParameter) GetParameterSpeakerName() string {
	if x != nil {
		return x.ParameterSpeakerName
	}
	return ""
}

func (x *SpeakerParameter) GetIsSupportEmotion() bool {
	if x != nil {
		return x.IsSupportEmotion
	}
	return false
}

func (x *SpeakerParameter) GetIsSupportMixedVoice() bool {
	if x != nil {
		return x.IsSupportMixedVoice
	}
	return false
}

func (x *SpeakerParameter) GetIsBelongClone() bool {
	if x != nil {
		return x.IsBelongClone
	}
	return false
}

type MessagePitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                                  // 参数
	ChineseName string `protobuf:"bytes,3,opt,name=chinese_name,json=chineseName,proto3" json:"chinese_name"` // 对应中文
}

func (x *MessagePitch) Reset() {
	*x = MessagePitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_tts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePitch) ProtoMessage() {}

func (x *MessagePitch) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_tts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePitch.ProtoReflect.Descriptor instead.
func (*MessagePitch) Descriptor() ([]byte, []int) {
	return file_v2_applet_tts_proto_rawDescGZIP(), []int{2}
}

func (x *MessagePitch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessagePitch) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

type MessageEmotion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                                  // 参数
	ChineseName string `protobuf:"bytes,3,opt,name=chinese_name,json=chineseName,proto3" json:"chinese_name"` // 对应中文
}

func (x *MessageEmotion) Reset() {
	*x = MessageEmotion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_tts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEmotion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEmotion) ProtoMessage() {}

func (x *MessageEmotion) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_tts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEmotion.ProtoReflect.Descriptor instead.
func (*MessageEmotion) Descriptor() ([]byte, []int) {
	return file_v2_applet_tts_proto_rawDescGZIP(), []int{3}
}

func (x *MessageEmotion) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageEmotion) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

type MessageDigitalPerson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                                  // 参数
	ChineseName string `protobuf:"bytes,3,opt,name=chinese_name,json=chineseName,proto3" json:"chinese_name"` // 对应中文
}

func (x *MessageDigitalPerson) Reset() {
	*x = MessageDigitalPerson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_tts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageDigitalPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDigitalPerson) ProtoMessage() {}

func (x *MessageDigitalPerson) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_tts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDigitalPerson.ProtoReflect.Descriptor instead.
func (*MessageDigitalPerson) Descriptor() ([]byte, []int) {
	return file_v2_applet_tts_proto_rawDescGZIP(), []int{4}
}

func (x *MessageDigitalPerson) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageDigitalPerson) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

type MessageMovement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`                                  // 用于传参
	ChineseName string `protobuf:"bytes,2,opt,name=chinese_name,json=chineseName,proto3" json:"chinese_name"` // 对应中文
}

func (x *MessageMovement) Reset() {
	*x = MessageMovement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_tts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageMovement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMovement) ProtoMessage() {}

func (x *MessageMovement) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_tts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMovement.ProtoReflect.Descriptor instead.
func (*MessageMovement) Descriptor() ([]byte, []int) {
	return file_v2_applet_tts_proto_rawDescGZIP(), []int{5}
}

func (x *MessageMovement) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageMovement) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

type MessageExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`                                  // 用于传参
	ChineseName string `protobuf:"bytes,2,opt,name=chinese_name,json=chineseName,proto3" json:"chinese_name"` // 对应中文
}

func (x *MessageExpression) Reset() {
	*x = MessageExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_tts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageExpression) ProtoMessage() {}

func (x *MessageExpression) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_tts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageExpression.ProtoReflect.Descriptor instead.
func (*MessageExpression) Descriptor() ([]byte, []int) {
	return file_v2_applet_tts_proto_rawDescGZIP(), []int{6}
}

func (x *MessageExpression) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageExpression) GetChineseName() string {
	if x != nil {
		return x.ChineseName
	}
	return ""
}

var File_v2_applet_tts_proto protoreflect.FileDescriptor

var file_v2_applet_tts_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2f, 0x74, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d,
	0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x03, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x54, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x3e, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x0a, 0x70, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x69, 0x74, 0x63, 0x68, 0x52, 0x09, 0x70, 0x69,
	0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x65, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf6, 0x01,
	0x0a, 0x10, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x69,
	0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x69, 0x78, 0x65, 0x64, 0x5f, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x6f, 0x6e,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x42, 0x65, 0x6c, 0x6f, 0x6e,
	0x67, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x22, 0x45, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x50, 0x69, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a,
	0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x14, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x4a, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x75, 0x0a, 0x0a, 0x54,
	0x54, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x54, 0x54, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x54, 0x53, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x32, 0x2f, 0x74, 0x74, 0x73, 0x2f, 0x67, 0x65, 0x74, 0x54, 0x54, 0x53, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x1d, 0x5a, 0x1b, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v2_applet_tts_proto_rawDescOnce sync.Once
	file_v2_applet_tts_proto_rawDescData = file_v2_applet_tts_proto_rawDesc
)

func file_v2_applet_tts_proto_rawDescGZIP() []byte {
	file_v2_applet_tts_proto_rawDescOnce.Do(func() {
		file_v2_applet_tts_proto_rawDescData = protoimpl.X.CompressGZIP(file_v2_applet_tts_proto_rawDescData)
	})
	return file_v2_applet_tts_proto_rawDescData
}

var file_v2_applet_tts_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_v2_applet_tts_proto_goTypes = []interface{}{
	(*GetTTSConfigResult)(nil),   // 0: applet.v2.GetTTSConfigResult
	(*SpeakerParameter)(nil),     // 1: applet.v2.SpeakerParameter
	(*MessagePitch)(nil),         // 2: applet.v2.MessagePitch
	(*MessageEmotion)(nil),       // 3: applet.v2.MessageEmotion
	(*MessageDigitalPerson)(nil), // 4: applet.v2.MessageDigitalPerson
	(*MessageMovement)(nil),      // 5: applet.v2.MessageMovement
	(*MessageExpression)(nil),    // 6: applet.v2.MessageExpression
	(*emptypb.Empty)(nil),        // 7: google.protobuf.Empty
}
var file_v2_applet_tts_proto_depIdxs = []int32{
	1, // 0: applet.v2.GetTTSConfigResult.speaker_list:type_name -> applet.v2.SpeakerParameter
	2, // 1: applet.v2.GetTTSConfigResult.pitch_list:type_name -> applet.v2.MessagePitch
	3, // 2: applet.v2.GetTTSConfigResult.emotion_list:type_name -> applet.v2.MessageEmotion
	5, // 3: applet.v2.GetTTSConfigResult.movement_list:type_name -> applet.v2.MessageMovement
	6, // 4: applet.v2.GetTTSConfigResult.expression_list:type_name -> applet.v2.MessageExpression
	7, // 5: applet.v2.TTSService.GetTTSConfig:input_type -> google.protobuf.Empty
	0, // 6: applet.v2.TTSService.GetTTSConfig:output_type -> applet.v2.GetTTSConfigResult
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_v2_applet_tts_proto_init() }
func file_v2_applet_tts_proto_init() {
	if File_v2_applet_tts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v2_applet_tts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTTSConfigResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_tts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeakerParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_tts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_tts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEmotion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_tts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageDigitalPerson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_tts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageMovement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_tts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_applet_tts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v2_applet_tts_proto_goTypes,
		DependencyIndexes: file_v2_applet_tts_proto_depIdxs,
		MessageInfos:      file_v2_applet_tts_proto_msgTypes,
	}.Build()
	File_v2_applet_tts_proto = out.File
	file_v2_applet_tts_proto_rawDesc = nil
	file_v2_applet_tts_proto_goTypes = nil
	file_v2_applet_tts_proto_depIdxs = nil
}
