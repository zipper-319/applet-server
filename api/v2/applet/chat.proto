syntax = "proto3";

package applet.v2;

option go_package = "api/v2/applet;applet";

import "google/api/annotations.proto";
import "v2/applet/common/common.proto";

service ChatRoom {
  rpc chat(ChatWSReq) returns (ChatWSResp) {
    option (google.api.http) = {
      get: "/api/v2/ws/chat"
    };
  };
}


// url中的路径参数；后续可以传递TTS发音人角色、语速、2D数字人形象等参数
message ChatWSReq {
  MethodType method = 1;
  string position = 2;
  string language = 3;
  int32  agent_id = 4 ;
  EnvType  env_type = 5 [json_name = "env_type"];
}

message ChatWSResp {
  int32  code = 1;
  string reason = 2;
  string message = 3;
  string Metadata = 4;
}


enum MessageType {
  chat_voice = 0;
  chat_text = 1;
  chat_interruption = 2;
  chat_parameter = 3;
}

message ChatClientMessage {
  string      content = 1;
  MessageType message_type = 2;
}

enum ServiceType {
  Service_VAD = 0;
  Service_ASR = 1;
  Service_Nlp = 2;
  Service_TTS = 3;
  service_digital_human = 4;
}

message ChatServerMessage {
    ServiceType service_type = 1;
    bytes content = 2;
    bool is_end = 3;
    bool is_success = 4;
    string err_msg = 5;
    string session_id = 6;
    string question_id = 7;
}

enum  VADPauseMode {
  VAD_PAUSE_MODE_FAST = 0;
  VAD_PAUSE_MODE_NORMAL = 1;
  VAD_PAUSE_MODE_SLOW = 2;
}

enum Vendor{
  VENDOR_CLOUDMINDS = 0;
  VENDOR_GOOGLE = 1;
  VENDOR_IFlyTek = 2;
  VENDOR_CPAll = 3;
}

message TTSParameter {

}

message ASRParameter {

}



message ChatParameter{
  // tts
  string  speed = 1;
  string  volume = 2;
  string  pitch = 3;
  string  speaker = 4;
  int32   is_clone = 5 [json_name = "is_clone"];  // 1: 不是克隆， 2：是克隆

  // asr
  int32     service_provider = 10 [json_name = "service_provider"];  // 1:达闼  2：Google  3：科大讯飞  4:CPAll
  int32     language_type = 11    [json_name = "language_type"]; //语言类型：    1:CH  2:EN 3:TCH 4:JA 5:ES 6:TH
  AsrDomain service_type = 12     [json_name = "service_type"];;  //服务类型： 1:通用  2:数码通讯  3：医疗康养

  int32   agent = 21;
  int32   env_type = 22;   // 1:
  string  language =23;
  string  position = 24;
}

enum  ChatInterruptionType {
  Unknown = 0;
}

enum ChatResponseType {
  ASRText = 0;
  AnswerText = 1;
  AnswerVoice = 2;
}

enum MethodType{
  TypeUnknown   = 0;
  OnlyTTS       = 1;
  OnlyNlp       = 2;
  NlpTTS        = 3;
  OnlyAsr       = 4;
  AsrNlp        = 5;
  AsrNlpTTS     = 6;
}

enum  ChatStatus{
  activated = 0;
  sleep = 1;
}

enum AsrDomain{
  ServiceUnknown = 0;
  Common = 1;
  Common_V2= 2;
  DigitalComm =3;
  MedicalHealth =4;
}