// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: v2/applet/chat.proto

package applet

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_chat_voice        MessageType = 0
	MessageType_chat_text         MessageType = 1
	MessageType_chat_interruption MessageType = 2
	MessageType_chat_parameter    MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "chat_voice",
		1: "chat_text",
		2: "chat_interruption",
		3: "chat_parameter",
	}
	MessageType_value = map[string]int32{
		"chat_voice":        0,
		"chat_text":         1,
		"chat_interruption": 2,
		"chat_parameter":    3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_applet_chat_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_v2_applet_chat_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{0}
}

type ServiceType int32

const (
	ServiceType_Service_VAD           ServiceType = 0
	ServiceType_Service_ASR           ServiceType = 1
	ServiceType_Service_Nlp           ServiceType = 2
	ServiceType_Service_TTS           ServiceType = 3
	ServiceType_service_digital_human ServiceType = 4
)

// Enum value maps for ServiceType.
var (
	ServiceType_name = map[int32]string{
		0: "Service_VAD",
		1: "Service_ASR",
		2: "Service_Nlp",
		3: "Service_TTS",
		4: "service_digital_human",
	}
	ServiceType_value = map[string]int32{
		"Service_VAD":           0,
		"Service_ASR":           1,
		"Service_Nlp":           2,
		"Service_TTS":           3,
		"service_digital_human": 4,
	}
)

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}

func (x ServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_applet_chat_proto_enumTypes[1].Descriptor()
}

func (ServiceType) Type() protoreflect.EnumType {
	return &file_v2_applet_chat_proto_enumTypes[1]
}

func (x ServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceType.Descriptor instead.
func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{1}
}

type VADPauseMode int32

const (
	VADPauseMode_VAD_PAUSE_MODE_FAST   VADPauseMode = 0
	VADPauseMode_VAD_PAUSE_MODE_NORMAL VADPauseMode = 1
	VADPauseMode_VAD_PAUSE_MODE_SLOW   VADPauseMode = 2
)

// Enum value maps for VADPauseMode.
var (
	VADPauseMode_name = map[int32]string{
		0: "VAD_PAUSE_MODE_FAST",
		1: "VAD_PAUSE_MODE_NORMAL",
		2: "VAD_PAUSE_MODE_SLOW",
	}
	VADPauseMode_value = map[string]int32{
		"VAD_PAUSE_MODE_FAST":   0,
		"VAD_PAUSE_MODE_NORMAL": 1,
		"VAD_PAUSE_MODE_SLOW":   2,
	}
)

func (x VADPauseMode) Enum() *VADPauseMode {
	p := new(VADPauseMode)
	*p = x
	return p
}

func (x VADPauseMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VADPauseMode) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_applet_chat_proto_enumTypes[2].Descriptor()
}

func (VADPauseMode) Type() protoreflect.EnumType {
	return &file_v2_applet_chat_proto_enumTypes[2]
}

func (x VADPauseMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VADPauseMode.Descriptor instead.
func (VADPauseMode) EnumDescriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{2}
}

type Vendor int32

const (
	Vendor_VENDOR_CLOUDMINDS Vendor = 0
	Vendor_VENDOR_GOOGLE     Vendor = 1
	Vendor_VENDOR_IFlyTek    Vendor = 2
	Vendor_VENDOR_CPAll      Vendor = 3
)

// Enum value maps for Vendor.
var (
	Vendor_name = map[int32]string{
		0: "VENDOR_CLOUDMINDS",
		1: "VENDOR_GOOGLE",
		2: "VENDOR_IFlyTek",
		3: "VENDOR_CPAll",
	}
	Vendor_value = map[string]int32{
		"VENDOR_CLOUDMINDS": 0,
		"VENDOR_GOOGLE":     1,
		"VENDOR_IFlyTek":    2,
		"VENDOR_CPAll":      3,
	}
)

func (x Vendor) Enum() *Vendor {
	p := new(Vendor)
	*p = x
	return p
}

func (x Vendor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Vendor) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_applet_chat_proto_enumTypes[3].Descriptor()
}

func (Vendor) Type() protoreflect.EnumType {
	return &file_v2_applet_chat_proto_enumTypes[3]
}

func (x Vendor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Vendor.Descriptor instead.
func (Vendor) EnumDescriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{3}
}

type ChatInterruptionType int32

const (
	ChatInterruptionType_Unknown ChatInterruptionType = 0
)

// Enum value maps for ChatInterruptionType.
var (
	ChatInterruptionType_name = map[int32]string{
		0: "Unknown",
	}
	ChatInterruptionType_value = map[string]int32{
		"Unknown": 0,
	}
)

func (x ChatInterruptionType) Enum() *ChatInterruptionType {
	p := new(ChatInterruptionType)
	*p = x
	return p
}

func (x ChatInterruptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatInterruptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_applet_chat_proto_enumTypes[4].Descriptor()
}

func (ChatInterruptionType) Type() protoreflect.EnumType {
	return &file_v2_applet_chat_proto_enumTypes[4]
}

func (x ChatInterruptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatInterruptionType.Descriptor instead.
func (ChatInterruptionType) EnumDescriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{4}
}

type ChatResponseType int32

const (
	ChatResponseType_ASRText     ChatResponseType = 0
	ChatResponseType_AnswerText  ChatResponseType = 1
	ChatResponseType_AnswerVoice ChatResponseType = 2
)

// Enum value maps for ChatResponseType.
var (
	ChatResponseType_name = map[int32]string{
		0: "ASRText",
		1: "AnswerText",
		2: "AnswerVoice",
	}
	ChatResponseType_value = map[string]int32{
		"ASRText":     0,
		"AnswerText":  1,
		"AnswerVoice": 2,
	}
)

func (x ChatResponseType) Enum() *ChatResponseType {
	p := new(ChatResponseType)
	*p = x
	return p
}

func (x ChatResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_v2_applet_chat_proto_enumTypes[5].Descriptor()
}

func (ChatResponseType) Type() protoreflect.EnumType {
	return &file_v2_applet_chat_proto_enumTypes[5]
}

func (x ChatResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatResponseType.Descriptor instead.
func (ChatResponseType) EnumDescriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{5}
}

// url中的路径参数；后续可以传递TTS发音人角色、语速、2D数字人形象等参数
type ChatWSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId   int32  `protobuf:"varint,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	Position  string `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Language  string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	AgentId   int32  `protobuf:"varint,4,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	SessionId string `protobuf:"bytes,5,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *ChatWSReq) Reset() {
	*x = ChatWSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatWSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatWSReq) ProtoMessage() {}

func (x *ChatWSReq) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatWSReq.ProtoReflect.Descriptor instead.
func (*ChatWSReq) Descriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatWSReq) GetRobotId() int32 {
	if x != nil {
		return x.RobotId
	}
	return 0
}

func (x *ChatWSReq) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *ChatWSReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ChatWSReq) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *ChatWSReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type ChatWSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Metadata string `protobuf:"bytes,3,opt,name=Metadata,proto3" json:"Metadata,omitempty"` // 根据后续方案而定，可能是实时音频流地址。
}

func (x *ChatWSResp) Reset() {
	*x = ChatWSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatWSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatWSResp) ProtoMessage() {}

func (x *ChatWSResp) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatWSResp.ProtoReflect.Descriptor instead.
func (*ChatWSResp) Descriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatWSResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChatWSResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatWSResp) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type ChatClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string      `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Type    MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=applet.v2.MessageType" json:"type,omitempty"`
	TraceId string      `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	IsEnd   bool        `protobuf:"varint,4,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"` // 会话是否结束
}

func (x *ChatClientMessage) Reset() {
	*x = ChatClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_chat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatClientMessage) ProtoMessage() {}

func (x *ChatClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_chat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatClientMessage.ProtoReflect.Descriptor instead.
func (*ChatClientMessage) Descriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{2}
}

func (x *ChatClientMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatClientMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_chat_voice
}

func (x *ChatClientMessage) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *ChatClientMessage) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

type ChatServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType ServiceType `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=applet.v2.ServiceType" json:"service_type,omitempty"`
	Content     []byte      `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	IsEnd       bool        `protobuf:"varint,3,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
	IsSuccess   bool        `protobuf:"varint,4,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	ErrMsg      string      `protobuf:"bytes,5,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
}

func (x *ChatServerMessage) Reset() {
	*x = ChatServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_chat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatServerMessage) ProtoMessage() {}

func (x *ChatServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_chat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatServerMessage.ProtoReflect.Descriptor instead.
func (*ChatServerMessage) Descriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ChatServerMessage) GetServiceType() ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return ServiceType_Service_VAD
}

func (x *ChatServerMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ChatServerMessage) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

func (x *ChatServerMessage) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *ChatServerMessage) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type ChatParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed    int32  `protobuf:"varint,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Volume   int32  `protobuf:"varint,2,opt,name=volume,proto3" json:"volume,omitempty"`
	Pitch    int32  `protobuf:"varint,3,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Speaker  string `protobuf:"bytes,4,opt,name=speaker,proto3" json:"speaker,omitempty"`
	Style    string `protobuf:"bytes,5,opt,name=style,proto3" json:"style,omitempty"`
	Language string `protobuf:"bytes,6,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *ChatParameter) Reset() {
	*x = ChatParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v2_applet_chat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatParameter) ProtoMessage() {}

func (x *ChatParameter) ProtoReflect() protoreflect.Message {
	mi := &file_v2_applet_chat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatParameter.ProtoReflect.Descriptor instead.
func (*ChatParameter) Descriptor() ([]byte, []int) {
	return file_v2_applet_chat_proto_rawDescGZIP(), []int{4}
}

func (x *ChatParameter) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *ChatParameter) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ChatParameter) GetPitch() int32 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *ChatParameter) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

func (x *ChatParameter) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *ChatParameter) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

var File_v2_applet_chat_proto protoreflect.FileDescriptor

var file_v2_applet_chat_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x98, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x57, 0x53, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x0a, 0x43, 0x68,
	0x61, 0x74, 0x57, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64,
	0x22, 0xb7, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45,
	0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x43,
	0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x2a, 0x57, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x02, 0x12, 0x12, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x10, 0x03, 0x2a, 0x6c, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x56, 0x41, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x41, 0x53, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x4e, 0x6c, 0x70, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x54, 0x54, 0x53, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x68, 0x75, 0x6d, 0x61,
	0x6e, 0x10, 0x04, 0x2a, 0x5b, 0x0a, 0x0c, 0x56, 0x41, 0x44, 0x50, 0x61, 0x75, 0x73, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x41, 0x44, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45,
	0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x41, 0x53, 0x54, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x56, 0x41, 0x44, 0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x41, 0x44, 0x5f, 0x50,
	0x41, 0x55, 0x53, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x4c, 0x4f, 0x57, 0x10, 0x02,
	0x2a, 0x58, 0x0a, 0x06, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x45,
	0x4e, 0x44, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x4d, 0x49, 0x4e, 0x44, 0x53, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x56, 0x45, 0x4e, 0x44, 0x4f, 0x52, 0x5f, 0x47, 0x4f, 0x4f, 0x47,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x45, 0x4e, 0x44, 0x4f, 0x52, 0x5f, 0x49,
	0x46, 0x6c, 0x79, 0x54, 0x65, 0x6b, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x56, 0x45, 0x4e, 0x44,
	0x4f, 0x52, 0x5f, 0x43, 0x50, 0x41, 0x6c, 0x6c, 0x10, 0x03, 0x2a, 0x23, 0x0a, 0x14, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x2a,
	0x40, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x53, 0x52, 0x54, 0x65, 0x78, 0x74, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x10,
	0x02, 0x32, 0x41, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x35, 0x0a,
	0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x57, 0x53, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x65, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x57, 0x53, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x65, 0x74, 0x3b, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v2_applet_chat_proto_rawDescOnce sync.Once
	file_v2_applet_chat_proto_rawDescData = file_v2_applet_chat_proto_rawDesc
)

func file_v2_applet_chat_proto_rawDescGZIP() []byte {
	file_v2_applet_chat_proto_rawDescOnce.Do(func() {
		file_v2_applet_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_v2_applet_chat_proto_rawDescData)
	})
	return file_v2_applet_chat_proto_rawDescData
}

var file_v2_applet_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_v2_applet_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_v2_applet_chat_proto_goTypes = []interface{}{
	(MessageType)(0),          // 0: applet.v2.MessageType
	(ServiceType)(0),          // 1: applet.v2.ServiceType
	(VADPauseMode)(0),         // 2: applet.v2.VADPauseMode
	(Vendor)(0),               // 3: applet.v2.Vendor
	(ChatInterruptionType)(0), // 4: applet.v2.ChatInterruptionType
	(ChatResponseType)(0),     // 5: applet.v2.ChatResponseType
	(*ChatWSReq)(nil),         // 6: applet.v2.ChatWSReq
	(*ChatWSResp)(nil),        // 7: applet.v2.ChatWSResp
	(*ChatClientMessage)(nil), // 8: applet.v2.ChatClientMessage
	(*ChatServerMessage)(nil), // 9: applet.v2.ChatServerMessage
	(*ChatParameter)(nil),     // 10: applet.v2.ChatParameter
}
var file_v2_applet_chat_proto_depIdxs = []int32{
	0, // 0: applet.v2.ChatClientMessage.type:type_name -> applet.v2.MessageType
	1, // 1: applet.v2.ChatServerMessage.service_type:type_name -> applet.v2.ServiceType
	6, // 2: applet.v2.ChatRoom.chat:input_type -> applet.v2.ChatWSReq
	7, // 3: applet.v2.ChatRoom.chat:output_type -> applet.v2.ChatWSResp
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v2_applet_chat_proto_init() }
func file_v2_applet_chat_proto_init() {
	if File_v2_applet_chat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v2_applet_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatWSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatWSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v2_applet_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v2_applet_chat_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v2_applet_chat_proto_goTypes,
		DependencyIndexes: file_v2_applet_chat_proto_depIdxs,
		EnumInfos:         file_v2_applet_chat_proto_enumTypes,
		MessageInfos:      file_v2_applet_chat_proto_msgTypes,
	}.Build()
	File_v2_applet_chat_proto = out.File
	file_v2_applet_chat_proto_rawDesc = nil
	file_v2_applet_chat_proto_goTypes = nil
	file_v2_applet_chat_proto_depIdxs = nil
}
